// default package
// Generated 2015-10-27 14:22:56 by Hibernate Tools 4.0.0
package com.ericsson.csp.tsc.api.pojo;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotBlank;

import com.alibaba.fastjson.annotation.JSONField;
import com.ericsson.csp.tsc.api.util.Constants;

/**
 * TscUserProfile generated by hbm2java
 */
@Entity
@Table(name = "tsc_user_profile", schema = "public")
public class TscUserProfile implements java.io.Serializable {

    private static final long serialVersionUID = -3585014447786239967L;

    public static final int   invalid_code     = Constants.ErrorCode.USER_INVALID_PARAM_CODE;

    @NotBlank(message = "userId is required.")
    @Pattern(regexp = "^\\w+$", message = "userId should number,printable char.")
    @Size(min = 6, max = 8, message = "userId min length is {min},max length is {max}")
    private String            userId;

    @NotBlank(message = "password is required.")
    @Pattern(regexp = "^\\w+$", message = "password validation failed.")
    private String            password;

    @NotBlank(message = "vin is required.")
    @Pattern(regexp = "^[A-Za-z0-9]+$", message = "vin should number,printable char.")
    @Size(max = 17, message = "vin max length is {max}.")
    private String            vin;

    private String            mobilePhone;

    private String            name;

    private String            address;

    private String            salt;

    @JSONField(name = "createTime", format = "yyyy-MM-dd HH:mm:ss")
    private Date              createTime;

    @JSONField(name = "updateTime", format = "yyyy-MM-dd HH:mm:ss")
    private Date              updateTime;

    public TscUserProfile() {
    }

    public TscUserProfile(String userId) {
        this.userId = userId;
    }

    public TscUserProfile(String userId, String password, String vin, String mobilePhone, String name, String address,
            String salt, Date createTime, Date updateTime) {
        this.userId = userId;
        this.password = password;
        this.vin = vin;
        this.mobilePhone = mobilePhone;
        this.name = name;
        this.address = address;
        this.salt = salt;
        this.createTime = createTime;
        this.updateTime = updateTime;
    }

    @Id
    @Column(name = "user_id", unique = true, nullable = false, length = 20)
    public String getUserId() {
        return this.userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    @Column(name = "password", length = 18)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "vin", length = 20)
    public String getVin() {
        return this.vin;
    }

    public void setVin(String vin) {
        this.vin = vin;
    }

    @Column(name = "mobile_phone", length = 20)
    public String getMobilePhone() {
        return this.mobilePhone;
    }

    public void setMobilePhone(String mobilePhone) {
        this.mobilePhone = mobilePhone;
    }

    @Column(name = "name", length = 500)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "address", length = 500)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "salt", length = 32)
    public String getSalt() {
        return this.salt;
    }

    public void setSalt(String salt) {
        this.salt = salt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "create_time", length = 29)
    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "update_time", length = 29)
    public Date getUpdateTime() {
        return this.updateTime;
    }

    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

}
